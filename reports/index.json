{
  "stats": {
    "suites": 2,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-08T16:32:16.323Z",
    "end": "2024-11-08T16:32:50.480Z",
    "duration": 34157,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "35e6dfc8-b9ef-4c6c-8029-02fbd83ff82c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3ee8b58-191e-40da-aade-62fb761859a3",
          "title": "Admin Login",
          "fullFile": "D:\\Mocha_AXIOS_Assignment\\test\\user.test.js",
          "file": "\\test\\user.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Admin Login\"",
              "fullTitle": "Admin Login \"after each\" hook in \"Admin Login\"",
              "timedOut": false,
              "duration": 3007,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 3000));",
              "err": {},
              "uuid": "7c07ab67-f46b-4129-9d54-bc1c45fbfceb",
              "parentUUID": "e3ee8b58-191e-40da-aade-62fb761859a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Admin can login by valid creds",
              "fullTitle": "Admin Login Admin can login by valid creds",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { data } = await axios.post(`${process.env.base_url}/user/login`, {\n    \"email\": \"admin@roadtocareer.net\",\n    \"password\": \"1234\",\n},\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n// console.log(\"Login response data:\", data);\nexpect(data.message).to.equal(\"Login successful\");\nstoreToken('token', data.token);",
              "err": {},
              "uuid": "d653667d-4c8f-46ce-8719-0ef2ac806f43",
              "parentUUID": "e3ee8b58-191e-40da-aade-62fb761859a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Admin can create first Customer",
              "fullTitle": "Admin Login Admin can create first Customer",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { data } = await axios.post(`${process.env.base_url}/user/create`, {\n    \"name\": `Axios user ${faker.person.firstName()}`,\n    \"email\": `${faker.internet.email()}`,\n    \"password\": \"1234\",\n    \"phone_number\": `01502${generateRandomId(100000, 999999)}`,\n    \"nid\": \"123456789\",\n    \"role\": \"Customer\"\n},\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${process.env.token}`,\n            \"X-AUTH-SECRET-KEY\": `${process.env.secretKey}`\n        }\n    });\n// console.log(\"User creation response data:\", data);\njsonData.push(data.user);\n// console.log(\"User creation response data 2:\", jsonData);\n       // fs.writeFile('./userData.json', JSON.stringify(jsonData, null, 2)  , 'utf8');\n       const jsonString = JSON.stringify(jsonData, null, 2);\nfs.writeFile('./userData.json', jsonString, 'utf8', (err) => {\n    if (err) {\n        console.error(\"An error occurred while writing the JSON file:\", err);\n        return;\n    }\n    console.log(\"JSON file has been saved successfully.\");\n});\n       // console.log(\"Updated jsonData:\", jsonData);",
              "err": {},
              "uuid": "2be8765c-43ac-41bc-86df-d2edb69f9b88",
              "parentUUID": "e3ee8b58-191e-40da-aade-62fb761859a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Admin can create second  Customer",
              "fullTitle": "Admin Login Admin can create second  Customer",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { data } = await axios.post(`${process.env.base_url}/user/create`, {\n    \"name\": `sumaiya ${faker.person.firstName()}`,\n    \"email\": `${faker.internet.email()}`,\n    \"password\": \"1234\",\n    \"phone_number\": `01502${generateRandomId(100000, 999999)}`,\n    \"nid\": \"123456789\",\n    \"role\": \"Customer\"\n},\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${process.env.token}`,\n            \"X-AUTH-SECRET-KEY\": `${process.env.secretKey}`\n        }\n    });\n// console.log(\"User creation response data:\", data);\njsonData.push(data.user);\n// console.log(\"User creation response data 2:\", jsonData);\n       // fs.writeFile('./userData.json', JSON.stringify(jsonData, null, 2)  , 'utf8');\n       const jsonString = JSON.stringify(jsonData, null, 2);\nfs.writeFile('./userData.json', jsonString, 'utf8', (err) => {\n    if (err) {\n        console.error(\"An error occurred while writing the JSON file:\", err);\n        return;\n    }\n    console.log(\"JSON file has been saved successfully.\");\n});\n       // console.log(\"Updated jsonData:\", jsonData);",
              "err": {},
              "uuid": "ecf46cb1-ea36-42b2-8112-602199b4e60f",
              "parentUUID": "e3ee8b58-191e-40da-aade-62fb761859a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Admin can create Agent",
              "fullTitle": "Admin Login Admin can create Agent",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { data } = await axios.post(`${process.env.base_url}/user/create`, {\n    \"name\": `tanha ${faker.person.firstName()}`,\n    \"email\": `${faker.internet.email()}`,\n    \"password\": \"1234\",\n    \"phone_number\": `01502${generateRandomId(100000, 999999)}`,\n    \"nid\": \"123456789\",\n    \"role\": \"Agent\"\n},\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${process.env.token}`,\n            \"X-AUTH-SECRET-KEY\": `${process.env.secretKey}`\n        }\n    });\n// console.log(\"User creation response data:\", data);\njsonData.push(data.user);\n// console.log(\"User creation response data 2:\", jsonData);\n       // fs.writeFile('./userData.json', JSON.stringify(jsonData, null, 2)  , 'utf8');\n       const jsonString = JSON.stringify(jsonData, null, 2);\nfs.writeFile('./userData.json', jsonString, 'utf8', (err) => {\n    if (err) {\n        console.error(\"An error occurred while writing the JSON file:\", err);\n        return;\n    }\n    console.log(\"JSON file has been saved successfully.\");\n});\n       // console.log(\"Updated jsonData:\", jsonData);",
              "err": {},
              "uuid": "8c0514c1-b605-4005-ba2e-2401748b9a02",
              "parentUUID": "e3ee8b58-191e-40da-aade-62fb761859a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d653667d-4c8f-46ce-8719-0ef2ac806f43",
            "2be8765c-43ac-41bc-86df-d2edb69f9b88",
            "ecf46cb1-ea36-42b2-8112-602199b4e60f",
            "8c0514c1-b605-4005-ba2e-2401748b9a02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 480,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1a7768b3-f7dd-4089-ad35-8928809bbced",
          "title": "transaction",
          "fullFile": "D:\\Mocha_AXIOS_Assignment\\test\\tranx.test.js",
          "file": "\\test\\tranx.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"transaction\"",
              "fullTitle": "transaction \"after each\" hook in \"transaction\"",
              "timedOut": false,
              "duration": 3009,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise(resolve => setTimeout(resolve, 3000));",
              "err": {},
              "uuid": "27bb2e87-a460-49da-98cc-12c3d8230611",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "System can deposit to agent successfully",
              "fullTitle": "transaction System can deposit to agent successfully",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/deposit`, {\n         \"from_account\":\"SYSTEM\",\n        // \"to_account\": agentAccount,\n       \"to_account\": jsonData[length-1].phone_number , // Agent Account\n         \"amount\": 2000\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Deposit successful\");",
              "err": {},
              "uuid": "6d724bff-e8c8-4320-9444-4d0de1371525",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deposit 1500 tk to a customer from the agent account",
              "fullTitle": "transaction Deposit 1500 tk to a customer from the agent account",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/deposit`, {\n     \n         \"from_account\":jsonData[length-1].phone_number , // Agent Account,\n        // \"to_account\": agentAccount,\n       \"to_account\": jsonData[length-3].phone_number , // First customer Account\n         \"amount\": 1500\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Deposit successful\");",
              "err": {},
              "uuid": "f68161c7-6fa5-4f96-9547-6b06c2f42f4a",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Withdraw 500 tk by the customer to the agent",
              "fullTitle": "transaction Withdraw 500 tk by the customer to the agent",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/withdraw`, {\n         \n         \"from_account\":jsonData[length-3].phone_number , // First customer Account\n        // \"to_account\": agentAccount,\n       \"to_account\": jsonData[length-1].phone_number , // Agent Account,\n         \"amount\": 500\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Withdraw successful\");",
              "err": {},
              "uuid": "5248e68f-dda5-45ec-81c7-c9cb30ae6994",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Send 500 TK to another customer",
              "fullTitle": "transaction Send 500 TK to another customer",
              "timedOut": false,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/sendmoney`, {\n             \n         \"from_account\":jsonData[length-3].phone_number , // First customer Account\n        // \"to_account\": agentAccount,\n       \"to_account\": jsonData[length-2].phone_number , // Second  Account,\n         \"amount\": 500\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`,\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Send money successful\");",
              "err": {},
              "uuid": "fd348ca5-b1d8-4d6e-967b-0cdabc18c075",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Second Customer Pay 100 tk to the Marchent",
              "fullTitle": "transaction Second Customer Pay 100 tk to the Marchent",
              "timedOut": false,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/payment`, {\n                 \n         \"from_account\":jsonData[length-2].phone_number , // Second  customer Account\n        // \"to_account\": agentAccount,\n       \"to_account\": \"01565636779 \", // Marchent  Account,\n         \"amount\": 100\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Payment successful\");",
              "err": {},
              "uuid": "050b6943-9fb3-4391-9e28-4d5375cced1a",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Second Customer Pay 100 tk to the Marchent",
              "fullTitle": "transaction Second Customer Pay 100 tk to the Marchent",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.post(`${process.env.base_url}/transaction/payment`, {\n                     \n         \"from_account\":jsonData[length-2].phone_number , // Second  customer Account\n        // \"to_account\": agentAccount,\n       \"to_account\": \"01565636779 \", // Marchent  Account,\n         \"amount\": 100\n     },\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"Payment successful\");",
              "err": {},
              "uuid": "22f9a359-8ac7-4df5-ba94-ddd5d3e05674",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check balance of the Second  customer",
              "fullTitle": "transaction Check balance of the Second  customer",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const agentAccount = jsonData[jsonData.length - 1];\n     const { data } = await axios.get(`${process.env.base_url}/transaction/balance/${customer2}`, \n         {\n             headers: {\n                 'Content-Type': 'application/json',\n                 \"Authorization\": `Bearer ${process.env.token}`,\n                 \"X-AUTH-SECRET-KEY\":`${process.env.secretKey}`\n             }\n         });\n     console.log(data);\n     expect(data.message).to.contains(\"User balance\");",
              "err": {},
              "uuid": "935bc81f-f5f7-408c-89be-cd9b31d7ad1f",
              "parentUUID": "1a7768b3-f7dd-4089-ad35-8928809bbced",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d724bff-e8c8-4320-9444-4d0de1371525",
            "f68161c7-6fa5-4f96-9547-6b06c2f42f4a",
            "5248e68f-dda5-45ec-81c7-c9cb30ae6994",
            "fd348ca5-b1d8-4d6e-967b-0cdabc18c075",
            "050b6943-9fb3-4391-9e28-4d5375cced1a",
            "22f9a359-8ac7-4df5-ba94-ddd5d3e05674",
            "935bc81f-f5f7-408c-89be-cd9b31d7ad1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "index"
      },
      "version": "6.2.0"
    }
  }
}